#!/bin/sh

# Get the name of the current directory and assign it to X
X=$(basename "$PWD")

# Function to start or restart the devbox container
start_devbox() {
  if docker ps -a --format '{{.Names}}' | grep -q "^$X$"; then
    # Container exists, check if it is running
    if [ "$(docker inspect -f '{{.State.Running}}' "$X")" = "true" ]; then
      echo "Container $X is already running."
    else
      docker start "$X"
      echo "Restarted devbox container with name: $X"
    fi
  else
    # Container does not exist, create and start it
    docker run -d -P --name "$X" -v "$PWD":/"$X" devbox tail -f /dev/null
    echo "Started new devbox container with name: $X, mounted to /$X"
  fi
}

# Function to stop the devbox container without removing it
stop_devbox() {
  docker stop "$X"
  echo "Stopped devbox container with name: $X"
}

# Function to destroy (stop and remove) the devbox container
destroy_devbox() {
  docker stop "$X" && docker rm "$X"
  echo "Destroyed devbox container with name: $X"
}

# Function to attach to the devbox container
attach_devbox() {
  docker exec -it "$X" /bin/zsh
}

# Function to list all running devbox containers
list_devboxes() {
  echo "Running devbox containers:"
  docker ps --filter "ancestor=devbox" --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"
}

# Check the command argument
case "$1" in
  start)
    start_devbox
    ;;
  stop)
    stop_devbox
    ;;
  destroy)
    destroy_devbox
    ;;
  list)
    list_devboxes
    ;;
  "")
    attach_devbox
    ;;
  *)
    echo "Usage: $0 {start|stop|destroy|list}"
    ;;
esac
